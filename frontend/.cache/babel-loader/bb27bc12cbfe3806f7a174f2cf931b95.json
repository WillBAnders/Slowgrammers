{"ast":null,"code":"var _jsxFileName = \"/Users/ColeKitroser 1/Documents/CEN5035/homepage/classes1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/material/Icon\";\nimport classes from \"./components/classes.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(classes) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log(\"open\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    console.log(\"close\");\n  };\n\n  function ButtonBuilder(classes) {\n    var arrButtons = [];\n    var stacks = [];\n    var i = 0;\n\n    while (i < classes.length) {\n      console.log(\"i = \" + i);\n      arrButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: App.onClick,\n        children: classes.at(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this));\n\n      if ((i + 1) % 3 == 0 || i + 1 == classes.length) {\n        stacks.push( /*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: \"column\",\n            sm: \"row\"\n          },\n          spacing: {\n            xs: 1,\n            sm: 2,\n            md: 4\n          },\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: arrButtons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this));\n        arrButtons = [];\n      }\n\n      i++;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: {\n          xs: 1,\n          sm: 2,\n          md: 2.5\n        },\n        children: [stacks, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Classes\",\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"Tutor Window\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"Tutor Window\",\n        children: \"Pick your tutor for this class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"If you're seeing this, that means that the dialog box is working.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gypwRtBDbslO8P6gH7C7gsNoXQ4=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ColeKitroser 1/Documents/CEN5035/homepage/classes1/src/App.js"],"names":["React","ReactDOM","Stack","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","IconButton","CloseIcon","classes","App","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClickOpen","console","log","handleClose","ButtonBuilder","arrButtons","stacks","i","length","push","onClick","at","xs","sm","md"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/material/Icon\";\nimport classes from \"./components/classes.txt\"\n\nfunction App(classes) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log(\"open\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    console.log(\"close\");\n  };\n  function ButtonBuilder(classes){\n    var arrButtons = [];\n    var stacks = [];\n    var i = 0;\n      while (i < classes.length) {\n        console.log(\"i = \" + i);\n        arrButtons.push(\n          <Button variant=\"contained\" onClick={App.onClick}>\n            {classes.at(i)}\n          </Button>\n        );\n        if ((i + 1) % 3 == 0 || i + 1 == classes.length) {\n          stacks.push(\n            <Stack\n              direction={{ xs: \"column\", sm: \"row\" }}\n              spacing={{ xs: 1, sm: 2, md: 4 }}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {arrButtons}\n            </Stack>\n          );\n          arrButtons = [];\n        }\n        i++;\n      }\n      return (\n        <div>\n          <Stack direction=\"column\" spacing={{ xs: 1, sm: 2, md: 2.5 }}>\n            {stacks} {/*Very important to wrap the buttons inside a div*/}\n          </Stack>\n        </div>\n      );\n  }\n  return (\n    <div className=\"Classes\">\n      {/*<Stack direction=\"column\" spacing={{ xs: 1, sm: 2, md: 2.5 }}>\n        <Stack\n          direction={{ xs: \"column\", sm: \"row\" }}\n          spacing={{ xs: 1, sm: 2, md: 4 }}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n          >\n            COP3502C-Programming Fundamentals 1\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              console.clear();\n            }}\n          >\n            COP3503C-Programming Fundamentals 2\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              console.log(\"test\");\n            }}\n          >\n            COP3530- Data Structures and Algorithms\n          </Button>\n        </Stack>\n        <Stack\n          direction={{ xs: \"column\", sm: \"row\" }}\n          spacing={{ xs: 1, sm: 2, md: 4 }}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Button variant=\"contained\">\n            COT3100- Applications of Discrete Structures\n          </Button>\n          <Button variant=\"contained\">\n            CDA3101- Introduction to Computer Organization\n          </Button>\n          <Button variant=\"contained\">\n            CEN3031- Introduction to Software Engineering\n          </Button>\n        </Stack>\n        <Stack\n          direction={{ xs: \"column\", sm: \"row\" }}\n          spacing={{ xs: 1, sm: 2, md: 4 }}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Button variant=\"contained\">\n            CIS4301- Information and Database Systems\n          </Button>\n          <Button variant=\"contained\">\n            CNT4007- Computer Network Fundamentals\n          </Button>\n          <Button variant=\"contained\">\n            COP4020- Programming Language Concepts\n          </Button>\n        </Stack>\n        <Stack\n          direction={{ xs: \"column\", sm: \"row\" }}\n          spacing={{ xs: 1, sm: 2, md: 4 }}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Button variant=\"contained\">\n            COP4533- Algorithm Abstraction and Design\n          </Button>\n          <Button variant=\"contained\">COP4600- Operating Systems</Button>\n        </Stack>\n          </Stack>*/}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"Tutor Window\"\n      >\n        <DialogTitle id=\"Tutor Window\">\n          {\"Pick your tutor for this class\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you're seeing this, that means that the dialog box is working.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <IconButton aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}