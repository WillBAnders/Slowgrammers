{"ast":null,"code":"var _jsxFileName = \"/Users/ColeKitroser 1/Documents/CEN5035/homepage/classes1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/material/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackApp() {\n  _s();\n\n  let courses = [];\n  courses.push(\"COP3502C- Programming Fundamentals 1\");\n  courses.push(\"COP3503C- Programming Fundamentals 2\");\n  courses.push(\"COP3530- Data Structures and Algorithms\");\n  courses.push(\"COT3100- Applications of Discrete Structures\");\n  courses.push(\"CDA3101- Introduction to Computer Organization\");\n  courses.push(\"CEN3031- Introduction to Software Engineering\");\n  courses.push(\"CIS4301- Information and Database Systems\");\n  courses.push(\"CNT4007- Computer Network Fundamentals\");\n  courses.push(\"COP4020- Programming Language Concepts\");\n  courses.push(\"COP4533- Algorithm Abstraction and Design\");\n  courses.push(\"COP4600- Operating Systems\"); // Needed to open and close the tutor window\n\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const [title, setTitle] = React.useState(\"\");\n\n  const handleClickOpen = coursename => {\n    setOpen(true);\n    setTitle(coursename);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // Used for setting up the importing of course names and turning them into buttons\n\n\n  let arrButtons = [];\n  let stacks = [];\n\n  for (let i = 0; i < courses.length; i++) {\n    let text = courses.at(i);\n    arrButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      text: courses.at(i),\n      onClick: () => handleClickOpen(text),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this));\n  }\n\n  /*#__PURE__*/\n  _jsxDEV(Grid, {\n    container: true,\n    spacing: {\n      xs: 2,\n      md: 3\n    },\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Courses\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: {\n        xs: 1,\n        sm: 2,\n        md: 2.5\n      },\n      children: stacks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"Tutor Window\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"Tutor Window\",\n        children: \"Pick your tutor for \" + title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"If you're seeing this, that means that the dialog box is working.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BackApp, \"/F55JLJ0gJdXM8hJS6BSHzyCQPw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = BackApp;\nexport default BackApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackApp\");","map":{"version":3,"sources":["/Users/ColeKitroser 1/Documents/CEN5035/homepage/classes1/src/App.js"],"names":["React","ReactDOM","Stack","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","IconButton","CloseIcon","BackApp","courses","push","open","setOpen","useState","theme","fullScreen","breakpoints","down","title","setTitle","handleClickOpen","coursename","handleClose","arrButtons","stacks","i","length","text","at","xs","md","sm"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/material/Icon\";\n\n\n\nfunction BackApp() {\nlet courses = []\ncourses.push(\"COP3502C- Programming Fundamentals 1\");\ncourses.push(\"COP3503C- Programming Fundamentals 2\");\ncourses.push(\"COP3530- Data Structures and Algorithms\");\ncourses.push(\"COT3100- Applications of Discrete Structures\");\ncourses.push(\"CDA3101- Introduction to Computer Organization\");\ncourses.push(\"CEN3031- Introduction to Software Engineering\");\ncourses.push(\"CIS4301- Information and Database Systems\");\ncourses.push(\"CNT4007- Computer Network Fundamentals\");\ncourses.push(\"COP4020- Programming Language Concepts\");\ncourses.push(\"COP4533- Algorithm Abstraction and Design\");\ncourses.push(\"COP4600- Operating Systems\");\n  // Needed to open and close the tutor window\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const [title, setTitle] = React.useState(\"\");\n  const handleClickOpen = (coursename) => {\n    setOpen(true);\n    setTitle(coursename);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  // Used for setting up the importing of course names and turning them into buttons\n  let arrButtons = [];\n  let stacks = [];\n  for (let i = 0; i < courses.length; i++){\n    let text = courses.at(i);\n    arrButtons.push(\n      <Button \n        variant=\"contained\" \n        text= {courses.at(i)}\n        onClick={() => handleClickOpen(text)}\n      >\n        {text}\n      </Button>\n    );\n  }\n  <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n\n  </Grid>\n  return (\n    <div className=\"Courses\">\n      {/* Course Buttons */}\n      <Stack direction=\"column\" spacing={{ xs: 1, sm: 2, md: 2.5 }}>\n        {stacks} \n      </Stack>\n      {/* Window Part */}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"Tutor Window\"\n      >\n        <DialogTitle id=\"Tutor Window\">\n          {\"Pick your tutor for \" + title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you're seeing this, that means that the dialog box is working.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <IconButton aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default BackApp;\n"]},"metadata":{},"sourceType":"module"}